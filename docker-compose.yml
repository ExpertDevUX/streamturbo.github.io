# StreamVibe Docker Compose Configuration
# Alternative to manual installation

version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: streamvibe
      POSTGRES_PASSWORD: ${PGPASSWORD:-streamvibe_password}
      POSTGRES_DB: streamvibe
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U streamvibe"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  # StreamVibe Application
  streamvibe:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - database
      - redis
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://streamvibe:${PGPASSWORD:-streamvibe_password}@database:5432/streamvibe
      - SESSION_SECRET=${SESSION_SECRET}
      - PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - ./recordings:/var/recordings
      - ./logs:/var/log/streamvibe
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with RTMP
  nginx:
    image: tiangolo/nginx-rtmp
    restart: unless-stopped
    depends_on:
      - streamvibe
    ports:
      - "80:80"
      - "443:443"
      - "1935:1935"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
      - ./hls:/var/www/html/hls
      - ./dash:/var/www/html/dash
    environment:
      - DOMAIN=${DOMAIN}

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: streamvibe_network